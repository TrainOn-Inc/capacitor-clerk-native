name: Auto Version and Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'package.json'
      - 'package-lock.json'
      - 'CHANGELOG.md'

permissions:
  contents: write
  packages: write

jobs:
  version-and-release:
    name: Auto Version and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@trainon-inc'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag and bump version
        id: bump_version
        run: |
          # Get the latest tag, default to 1.0.0 if none exists
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          echo "Latest tag: $LATEST_TAG"
          
          # Remove 'v' prefix
          CURRENT_VERSION=${LATEST_TAG#v}
          echo "Current version: $CURRENT_VERSION"
          
          # Split version into major.minor.patch
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          
          # Bump minor version
          NEW_MINOR=$((MINOR + 1))
          NEW_VERSION="$MAJOR.$NEW_MINOR.0"
          
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          # Update version in package.json without creating a git tag
          npm version ${{ steps.bump_version.outputs.version }} --no-git-tag-version --allow-same-version

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Update CHANGELOG
        run: |
          VERSION=${{ steps.bump_version.outputs.version }}
          DATE=$(date +%Y-%m-%d)

          # Create changelog entry
          if [ -f CHANGELOG.md ]; then
            sed -i "1a\\
\\
## [$VERSION] - $DATE\\
\\
### Changed\\
- Automated release from main branch\\
" CHANGELOG.md
          else
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "## [$VERSION] - $DATE" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "### Changed" >> CHANGELOG.md
            echo "- Initial release" >> CHANGELOG.md
          fi

      - name: Commit version bump
        run: |
          git add package.json CHANGELOG.md
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.version }} [skip ci]"
          git push origin main

      - name: Create and push tag
        run: |
          git tag -a "v${{ steps.bump_version.outputs.version }}" -m "Release v${{ steps.bump_version.outputs.version }}"
          git push origin "v${{ steps.bump_version.outputs.version }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump_version.outputs.version }}
          name: Release v${{ steps.bump_version.outputs.version }}
          body: |
            ## Automated Release

            This release was automatically created from the main branch.

            ### Installation

            ```bash
            npm install @trainon-inc/capacitor-clerk-native@${{ steps.bump_version.outputs.version }}
            ```

            Or install directly from GitHub:
            ```bash
            npm install github:TrainOn-Inc/capacitor-clerk-native#v${{ steps.bump_version.outputs.version }}
            ```

            See [CHANGELOG.md](https://github.com/TrainOn-Inc/capacitor-clerk-native/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false
          files: |
            dist/**/*
            TrainonIncCapacitorClerkNative.podspec
            README.md
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: npm publish --registry=https://npm.pkg.github.com
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

