name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    # Skip if commit message contains [skip ci] or starts with "chore: bump version"
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !startsWith(github.event.head_commit.message, 'chore: bump version')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag and bump version
        id: bump_version
        run: |
          # Get the latest tag, default to v0.0.0 if none exists
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          # Remove 'v' prefix
          CURRENT_VERSION=${LATEST_TAG#v}
          echo "Current version: $CURRENT_VERSION"

          # Split version into major.minor.patch
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          # Bump minor version
          NEW_MINOR=$((MINOR + 1))
          NEW_VERSION="$MAJOR.$NEW_MINOR.0"

          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm ci

      - name: Update package.json version
        run: |
          npm version ${{ steps.bump_version.outputs.version }} --no-git-tag-version --allow-same-version

      - name: Build
        run: npm run build

      - name: Update CHANGELOG
        run: |
          VERSION=${{ steps.bump_version.outputs.version }}
          DATE=$(date +%Y-%m-%d)
          COMMIT_MSG="${{ github.event.head_commit.message }}"

          if [ -f CHANGELOG.md ]; then
            # Create temp file with new entry
            echo "" > changelog_entry.tmp
            echo "## [$VERSION] - $DATE" >> changelog_entry.tmp
            echo "" >> changelog_entry.tmp
            echo "### Changed" >> changelog_entry.tmp
            echo "- $COMMIT_MSG" >> changelog_entry.tmp
            echo "" >> changelog_entry.tmp

            # Combine with existing changelog
            tail -n +2 CHANGELOG.md >> changelog_entry.tmp
            echo "# Changelog" > CHANGELOG.md
            cat changelog_entry.tmp >> CHANGELOG.md
            rm changelog_entry.tmp
          else
            cat > CHANGELOG.md << 'EOF'
          # Changelog

          EOF
            echo "## [$VERSION] - $DATE" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "### Changed" >> CHANGELOG.md
            echo "- $COMMIT_MSG" >> CHANGELOG.md
          fi

      - name: Commit version bump
        run: |
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.version }} [skip ci]"
          git push origin main

      - name: Create and push tag
        run: |
          git tag -a "v${{ steps.bump_version.outputs.version }}" -m "Release v${{ steps.bump_version.outputs.version }}"
          git push origin "v${{ steps.bump_version.outputs.version }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump_version.outputs.version }}
          name: Release v${{ steps.bump_version.outputs.version }}
          body: |
            ## Release v${{ steps.bump_version.outputs.version }}

            ${{ github.event.head_commit.message }}

            ### Installation

            **From npm (public package):**
            ```bash
            npm install @trainon-inc/capacitor-clerk-native@${{ steps.bump_version.outputs.version }}
            ```

            See [CHANGELOG.md](https://github.com/TrainOn-Inc/capacitor-clerk-native/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/**/*
            TrainonIncCapacitorClerkNative.podspec
            README.md
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "${NODE_AUTH_TOKEN}" ]; then
            echo "ERROR: NPM_TOKEN secret is not set. Create an npm access token and add it as the repository secret NPM_TOKEN."
            exit 1
          fi

          # Use the newly bumped version created earlier in this job
          TAG_VERSION=${{ steps.bump_version.outputs.version }}
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Bumped version: $TAG_VERSION, package.json version: $PKG_VERSION"

          if [ "$TAG_VERSION" != "$PKG_VERSION" ]; then
            echo "Version mismatch: bumped version ($TAG_VERSION) != package.json ($PKG_VERSION). Aborting publish."
            exit 1
          fi

          # Publish to npm registry (scoped package public access)
          npm publish --access public


